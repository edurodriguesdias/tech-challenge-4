name: Pipeline Deploy
on: 
    push:
        branches: [main]
jobs:
    training-model:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout Code
          uses: actions/checkout@v4

        - name: Set up Python
          uses: actions/setup-python@v4
          with:
            python-version: '3.11'
        - name: Install Dependencies
          run: |
              python -m pip install --upgrade pip
              pip install -r ./requirements/requirements.txt
        
        - name: Train Model && Generate PKL
          run: |
            python ./src/train.py

    deploy-aws:
      environment: production      
      needs: training-model
      runs-on: ubuntu-latest
      steps:
        - name: Checkout Code
          uses: actions/checkout@v4

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: 'us-east-1'       

        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v1

        - name: push API image to Amazon ECR
          id: api-deploy-image
          uses: whoan/docker-build-with-cache-action@v5
          with:
            username: "${{ secrets.AWS_ACCESS_KEY_ID }}"
            password: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
            registry: ${{ steps.login-ecr.outputs.registry }}
            image_name: ${{ vars.AWS_ECR_REPOSITORY_NAME }}
            image_tag: ${{ github.sha }}
            dockerfile: Dockerfile

        - name: push monitoring to Amazon ECR
          id: monitoring-deploy-image
          uses: whoan/docker-build-with-cache-action@v5
          with:
            username: "${{ secrets.AWS_ACCESS_KEY_ID }}"
            password: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
            registry: ${{ steps.login-ecr.outputs.registry }}
            image_name: ${{ vars.AWS_ECR_REPOSITORY_NAME }}
            image_tag: ${{ github.sha }}
            dockerfile: Dockerfile.monitoring


